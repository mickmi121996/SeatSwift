<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource PrimaryGreenColor}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background" Width="40" Height="40" Background="Transparent" BorderBrush="{DynamicResource SecondaryBackGroundColor}" BorderThickness="2"/>
                        <Path x:Name="CheckMark" Width="20" Height="20" Visibility="Collapsed" Data="M 0 0 L 20 20 M 0 20 L 20 0" Stroke="{DynamicResource PrimaryGreenColor}" StrokeThickness="2"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- region Button Close | Restore | Minimize -->
    <Style x:Key="IconButtonsStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource SecondaryBackGroundColor}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="bd" CornerRadius="5" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Path Name="ico" Data="{TemplateBinding Content}" Fill="{DynamicResource PrimaryBackgroundColor}" Height="10" Width="10" Stretch="Uniform"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ThirdIconColor}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="Tag" Value="IsCloseButton"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource AlertColor}"/>
                            <Setter TargetName="ico" Property="Fill" Value="{DynamicResource PrimaryTexColor}"/>
                        </MultiTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ico" Property="Fill" Value="{DynamicResource PrimaryTexColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- endregion Button Close | Restore | Minimize -->


    <!--Region Style for the header-->
    <Style x:Key="CustomColumnHeaderStyle" TargetType="DataGridColumnHeader">
        <Setter Property="Foreground" Value="#FAFAFA"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryGreenColor}"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Border Background="{TemplateBinding Background}" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                     BorderThickness="0" CornerRadius="10,10,0,0" >
                        <TextBlock Text="{TemplateBinding Content}" 
                                       Foreground="{TemplateBinding Foreground}" 
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                       Padding="6" 
                                       FontSize="{TemplateBinding FontSize}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--EndRegion-->

    <!--Region Style for TotalRow-->

    <Style x:Key="DataGridRowStyle" TargetType="DataGridRow">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsTotalEntry}" Value="True">
                <Setter Property="Background" Value="#42A5F5"/>
                <Setter Property="IsEnabled" Value="False"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="DataGridDashBoard" TargetType="DataGridRow">
        <Setter Property="Foreground" Value="Black"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="Opacity" Value="1.0"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DataGridCellDashboard" TargetType="DataGridCell">
        <Setter Property="TextBlock.Foreground" Value="Black"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="TextBlock.Foreground" Value="Black"/>
                <Setter Property="Height" Value="auto"></Setter>
                <Setter Property="Margin" Value="5"/>
            </Trigger>
        </Style.Triggers>
    </Style>



    <!--EndRegion-->


    <!--EndRegion-->

</ResourceDictionary>